name: "Build and deploy cpa-sync"
on:
  workflow_call:
  workflow_dispatch:
  push:
    branches:
      - main
      - dev
      - dev/**
    paths:
      - cpa-sync/**
      - felles/**
      - .github/workflows/cpa-sync-deploy-dev.yaml

env:
  MODULE_NAME: "cpa-sync"
  NAIS_MANIFEST: "cpa-sync-dev.yaml"

jobs:
  build-and-push:
    name: "Build and push Docker container"
    runs-on: "ubuntu-latest"
    permissions: 
      packages: write
      repository-projects: write
      contents: write
    steps:
      - uses: "actions/checkout@v4"
      - uses: "actions/setup-java@v4"
        with:
          java-version: 21
          distribution: temurin

      - name: "Cache gradle wrapper"
        uses: actions/cache@v4
        with:
          path: ~/.gradle/wrapper
          key: ${{ runner.os }}-gradle-wrapper-${{ hashFiles('**/gradle/wrapper/gradle-wrapper.properties') }}

      - name: "Cache Gradle packages"
        uses: actions/cache@v4
        with:
          path: ~/.gradle/caches
          key: ${{ runner.os }}-gradle-cache-${{ hashFiles('build.gradle') }}
          restore-keys: |
              ${{ runner.os }}-gradle-cache-

      - name: "Build and tests ${{ env.MODULE_NAME }}"
        run: ./gradlew :$MODULE_NAME:test :$MODULE_NAME:build
        env:
            ORG_GRADLE_PROJECT_githubUser: x-access-token
            ORG_GRADLE_PROJECT_githubPassword: ${{ secrets.GITHUB_TOKEN }}
            GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Docker build and push cpa-sync
        uses: nais/docker-build-push@v0
        id: docker-push-cpa-sync
        with:
          team: team-emottak # required
          tag: ${{ github.sha }}
          dockerfile: Dockerfile # optional, default Dockerfile
          docker_context: cpa-sync # optional, default .
          image_suffix: cpa-sync
    outputs:
      image: ${{ steps.docker-push-cpa-sync.outputs.image }}

  deploy:
    name: "Deploy cpa-sync to dev"
    needs: "build-and-push"
    runs-on: "ubuntu-latest"
    permissions:
      contents: read
      id-token: write
    steps:
      - uses: "actions/checkout@v4"
      - name: "Deploy to DEV"
        uses: "nais/deploy/actions/deploy@v2"
        env:
          CLUSTER: "dev-fss"
          RESOURCE: ".nais/${{ env.NAIS_MANIFEST }}"
          IMAGE: ${{ needs.build-and-push.outputs.image }}
